"""
    weasyprint.tests.test_draw.test_background
    ------------------------------------------

    Test how backgrounds are drawn.

    :copyright: Copyright 2011-2018 Simon Sapin and contributors, see AUTHORS.
    :license: BSD, see LICENSE for details.

"""

import pytest

from . import B, G, _, assert_pixels, r
from ..testing_utils import assert_no_logs


@assert_no_logs
@pytest.mark.parametrize(
    'name, expected_width, expected_height, expected_pixels, html', (
        ('all_blue', 10, 10, (10 * [10 * B]), '''
           <style>
             @page { size: 10px }
             /* body’s background propagates to the whole canvas */
             body { margin: 2px; background: #00f; height: 5px }
           </style>
         <body>'''),
        ('blocks', 10, 10, [
         r + r + r + r + r + r + r + r + r + r,
         r + r + r + r + r + r + r + r + r + r,
         r + r + B + B + B + B + B + B + r + r,
         r + r + B + B + B + B + B + B + r + r,
         r + r + B + B + B + B + B + B + r + r,
         r + r + B + B + B + B + B + B + r + r,
         r + r + B + B + B + B + B + B + r + r,
         r + r + r + r + r + r + r + r + r + r,
         r + r + r + r + r + r + r + r + r + r,
         r + r + r + r + r + r + r + r + r + r,
         ], '''
           <style>
             @page { size: 10px }
             /* html’s background propagates to the whole canvas */
             html { padding: 1px; background: #f00 }
             /* html has a background, so body’s does not propagate */
             body { margin: 1px; background: #00f; height: 5px }
          </style>
          <body>'''),
    ))
def test_canvas_background(name, expected_width, expected_height,
                           expected_pixels, html):
    assert_pixels(name, expected_width, expected_height, expected_pixels, html)


@assert_no_logs
@pytest.mark.parametrize('name, css, pixels', (
    ('repeat', 'url(pattern.png)', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + r + B + B + B + r + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + r + B + B + B + r + B + B + B + r + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + r + B + B + B + r + B + B + B + r + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('repeat_x', 'url(pattern.png) repeat-x', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + r + B + B + B + r + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('repeat_y', 'url(pattern.png) repeat-y', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),

    ('left_top', 'url(pattern.png) no-repeat 0 0%', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('center_top', 'url(pattern.png) no-repeat 50% 0px', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + r + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('right_top', 'url(pattern.png) no-repeat 6px top', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + r + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('bottom_6_right_0', 'url(pattern.png) no-repeat bottom 6px right 0', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + r + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('left_center', 'url(pattern.png) no-repeat left center', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('center_left', 'url(pattern.png) no-repeat center left', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('center_center', 'url(pattern.png) no-repeat 3px 3px', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + r + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('right_center', 'url(pattern.png) no-repeat 100% 50%', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + r + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),

    ('left_bottom', 'url(pattern.png) no-repeat 0% bottom', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('center_bottom', 'url(pattern.png) no-repeat center 6px', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + r + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('bottom_center', 'url(pattern.png) no-repeat bottom center', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + r + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('right_bottom', 'url(pattern.png) no-repeat 6px 100%', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + r + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),

    ('repeat_x_1px_2px', 'url(pattern.png) repeat-x 1px 2px', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + r + B + B + B + r + B + B + B + r + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + B + B + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('repeat_y_local_2px_1px', 'url(pattern.png) repeat-y local 2px 1px', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),

    ('fixed', 'url(pattern.png) no-repeat fixed', [
        # The image is actually here:
        #######
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,  #
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,  #
        _ + _ + B + B + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,  #
        _ + _ + B + B + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,  #
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('fixed_right', 'url(pattern.png) no-repeat fixed right 3px', [
        #                   x x x x
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + r + B + _ + _,  # x
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + B + B + _ + _,  # x
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + B + B + _ + _,  # x
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + B + B + _ + _,  # x
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('fixed_center_center', 'url(pattern.png)no-repeat fixed 50%center', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + r + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('multi_under', '''url(pattern.png) no-repeat,
                       url(pattern.png) no-repeat 2px 1px''', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('multi_over', '''url(pattern.png) no-repeat 2px 1px,
                      url(pattern.png) no-repeat''', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + r + B + B + B + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + r + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + B + B + B + B + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ]),
))
def test_background_image(name, css, pixels):
    # pattern.png looks like this:

    #    r + B + B + B,
    #    B + B + B + B,
    #    B + B + B + B,
    #    B + B + B + B,

    assert_pixels('background_' + name, 14, 16, pixels, '''
      <style>
        @page { size: 14px 16px }
        html { background: #fff }
        body { margin: 2px; height: 10px;
               background: %s }
        p { background: none }
      </style>
      <body>
      <p>&nbsp;''' % css)


@assert_no_logs
def test_background_image_zero_size_background():
    # Regression test for https://github.com/Kozea/WeasyPrint/issues/217
    assert_pixels('zero_size_background', 10, 10, [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], '''
      <style>
        @page { size: 10px }
        html { background: #fff }
        body { background: url(pattern.png);
               background-size: cover;
               display: inline-block }
      </style>
      <body>''')


@assert_no_logs
def test_background_origin():
    """Test the background-origin property."""
    def test_value(value, pixels, css=None):
        assert_pixels('background_origin_' + value, 12, 12, pixels, '''
            <style>
                @page { size: 12px }
                html { background: #fff }
                body { margin: 1px; padding: 1px; height: 6px;
                       border: 1px solid  transparent;
                       background: url(pattern.png) bottom right no-repeat;
                       background-origin: %s }
            </style>
            <body>''' % (css or value,))

    test_value('border-box', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + r + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ])
    test_value('padding-box', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + r + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ])
    test_value('content-box', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + r + B + B + B + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _,
        _ + _ + _ + _ + _ + B + B + B + B + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ])

    test_value('border-box_clip', [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + r + B + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + B + B + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], css='border-box; background-clip: content-box')


@assert_no_logs
def test_background_repeat_space_1():
    assert_pixels('background_repeat_space', 12, 16, [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + B + B + B + _ + _ + r + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + B + B + B + _ + _ + r + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + B + B + B + _ + _ + r + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], '''
      <style>
        @page { size: 12px 16px }
        html { background: #fff }
        body { margin: 1px; height: 14px;
               background: url(pattern.png) space; }
      </style>
      <body>''')


@assert_no_logs
def test_background_repeat_space_2():
    assert_pixels('background_repeat_space', 12, 14, [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + B + B + B + _ + _ + r + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + r + B + B + B + _ + _ + r + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + r + B + B + B + _ + _ + r + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + B + B + B + B + _ + _ + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], '''
      <style>
        @page { size: 12px 14px }
        html { background: #fff }
        body { margin: 1px; height: 12px;
               background: url(pattern.png) space; }
      </style>
      <body>''')


@assert_no_logs
def test_background_repeat_space_3():
    assert_pixels('background_repeat_space', 12, 13, [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + B + B + B + r + B + B + B + r + B + _,
        _ + B + B + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + B + B + B + r + B + B + B + r + B + _,
        _ + B + B + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], '''
      <style>
        @page { size: 12px 13px }
        html { background: #fff }
        body { margin: 1px; height: 11px;
               background: url(pattern.png) repeat space; }
      </style>
      <body>''')


@assert_no_logs
def test_background_repeat_round_1():
    assert_pixels('background_repeat_round', 10, 14, [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], '''
      <style>
        @page { size: 10px 14px }
        html { background: #fff }
        body { margin: 1px; height: 12px;
               image-rendering: pixelated;
               background: url(pattern.png) top/6px round repeat; }
      </style>
      <body>''')


@assert_no_logs
def test_background_repeat_round_2():
    assert_pixels('background_repeat_round', 10, 18, [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], '''
      <style>
        @page { size: 10px 18px }
        html { background: #fff }
        body { margin: 1px; height: 16px;
               image-rendering: pixelated;
               background: url(pattern.png) center/auto 8px repeat round; }
      </style>
      <body>''')


@assert_no_logs
def test_background_repeat_round_3():
    assert_pixels('background_repeat_round', 10, 14, [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + r + r + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], '''
      <style>
        @page { size: 10px 14px }
        html { background: #fff }
        body { margin: 1px; height: 12px;
               image-rendering: pixelated;
               background: url(pattern.png) center/6px 9px round; }
      </style>
      <body>''')


@assert_no_logs
def test_background_repeat_round_4():
    assert_pixels('background_repeat_round', 10, 14, [
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
        _ + r + B + B + B + r + B + B + B + _,
        _ + r + B + B + B + r + B + B + B + _,
        _ + r + B + B + B + r + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
    ], '''
      <style>
        @page { size: 10px 14px }
        html { background: #fff }
        body { margin: 1px; height: 12px;
               image-rendering: pixelated;
               background: url(pattern.png) center/5px 9px round; }
      </style>
      <body>''')


@assert_no_logs
@pytest.mark.parametrize('value, pixels', (
    ('#00f border-box', [
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + _,
        _ + B + B + B + B + B + B + _,
        _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('#00f padding-box', [
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + _ + _,
        _ + _ + B + B + B + B + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('#00f content-box', [
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + B + B + _ + _ + _,
        _ + _ + _ + B + B + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + _ + _ + _ + _ + _ + _ + _,
    ]),
    ('url(pattern.png) padding-box, #0f0', [
        _ + _ + _ + _ + _ + _ + _ + _,
        _ + G + G + G + G + G + G + _,
        _ + G + r + B + B + B + G + _,
        _ + G + B + B + B + B + G + _,
        _ + G + B + B + B + B + G + _,
        _ + G + B + B + B + B + G + _,
        _ + G + G + G + G + G + G + _,
        _ + _ + _ + _ + _ + _ + _ + _,
    ]),
))
def test_background_clip(value, pixels):
    assert_pixels('background_clip_' + value, 8, 8, pixels, '''
      <style>
        @page { size: 8px }
        html { background: #fff }
        body { margin: 1px; padding: 1px; height: 2px;
               border: 1px solid  transparent;
               background: %s }
      </style>
      <body>''' % value)


@assert_no_logs
@pytest.mark.parametrize(
    'name, expected_width, expected_height, expected_pixels, html', (
        ('background_size', 12, 12, [
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + r + r + B + B + B + B + B + B + _,
         _ + _ + _ + r + r + B + B + B + B + B + B + _,
         _ + _ + _ + B + B + B + B + B + B + B + B + _,
         _ + _ + _ + B + B + B + B + B + B + B + B + _,
         _ + _ + _ + B + B + B + B + B + B + B + B + _,
         _ + _ + _ + B + B + B + B + B + B + B + B + _,
         _ + _ + _ + B + B + B + B + B + B + B + B + _,
         _ + _ + _ + B + B + B + B + B + B + B + B + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         ], '''
           <style>
             @page { size: 12px }
             html { background: #fff }
             body { margin: 1px; height: 10px;
                    /* Use nearest neighbor algorithm for image resizing: */
                    image-rendering: pixelated;
                    background: url(pattern.png) no-repeat
                                bottom right / 80% 8px; }
           </style>
           <body>'''),
        ('background_size_auto', 12, 12, [
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + r + B + B + B + _,
         _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _,
         _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _,
         _ + _ + _ + _ + _ + _ + _ + B + B + B + B + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         ], '''
           <style>
             @page { size: 12px }
             html { background: #fff }
             body { margin: 1px; height: 10px;
                    /* Use nearest neighbor algorithm for image resizing: */
                    image-rendering: pixelated;
                    background: url(pattern.png) bottom right/auto no-repeat }
           </style>
           <body>'''),
        ('background_size_contain', 14, 10, [
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + r + r + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + r + r + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         ], '''
           <style>
             @page { size: 14px 10px }
             html { background: #fff }
             body { margin: 1px; height: 8px;
                    /* Use nearest neighbor algorithm for image resizing: */
                    image-rendering: pixelated;
                    background: url(pattern.png) no-repeat;
                    background-size: contain }
           </style>
           <body>'''),

        ('background_size_mixed', 14, 10, [
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + r + r + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + r + r + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         ], '''
           <style>
             @page { size: 14px 10px }
             html { background: #fff }
             body { margin: 1px; height: 8px;
                    /* Use nearest neighbor algorithm for image resizing: */
                    image-rendering: pixelated;
                    background: url(pattern.png) no-repeat left / auto 8px;
                    clip: auto; /* no-op to cover more validation */ }
           </style>
           <body>'''),
        ('background_size_double', 14, 10, [
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + r + r + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + B + B + B + B + B + B + B + B + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         ], '''
           <style>
             @page { size: 14px 10px }
             html { background: #fff }
             body { margin: 1px; height: 8px;
                    /* Use nearest neighbor algorithm for image resizing: */
                    image-rendering: pixelated;
                    background: url(pattern.png) no-repeat 0 0 / 8px 4px;
                    clip: auto; /* no-op to cover more validation */ }
           </style>
           <body>'''),
        ('background_size_cover', 14, 10, [
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         _ + r + r + r + B + B + B + B + B + B + B + B + B + _,
         _ + r + r + r + B + B + B + B + B + B + B + B + B + _,
         _ + r + r + r + B + B + B + B + B + B + B + B + B + _,
         _ + B + B + B + B + B + B + B + B + B + B + B + B + _,
         _ + B + B + B + B + B + B + B + B + B + B + B + B + _,
         _ + B + B + B + B + B + B + B + B + B + B + B + B + _,
         _ + B + B + B + B + B + B + B + B + B + B + B + B + _,
         _ + B + B + B + B + B + B + B + B + B + B + B + B + _,
         _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _ + _,
         ], '''
           <style>
             @page { size: 14px 10px }
             html { background: #fff }
             body { margin: 1px; height: 8px;
                    /* Use nearest neighbor algorithm for image resizing: */
                    image-rendering: pixelated;
                    background: url(pattern.png) no-repeat right 0/cover }
           </style>
           <body>'''),
    )
)
def test_background_size(name, expected_width, expected_height,
                         expected_pixels, html):
    assert_pixels(
        name, expected_width, expected_height, expected_pixels, html)
